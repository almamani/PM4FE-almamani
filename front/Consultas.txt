Muy bueeenas compañero!! :), volvió la copada de la programación :D , te hago un rápido resumen, estamos haciendo una app con nextjs. Y ya estoy en la parte de generar la orden una vez que ya se finaliza la compra. Como decimos en la Argentina, me darías una manito con un error?





Hice un servicio para poder guardar la orden y modifiqué el cartComponent para poder utilizar ese servicio, el temilla es que al hacer click a Buy Order, me tira este error: "Cannot read properties of undefined (reading 'length')"...

OrderService
import { API_URL } from "../../envs";
import { IProduct } from "@/interfaces/IProduct";
import { IUser } from "@/interfaces/IUser";

export const buyOrder = async (cart: IProduct[], user: IUser) => {
  const data = {
    userId: user.user.id,
    products: cart.map((product) => product.id),
  };

  const res = await fetch(`${API_URL}/orders`, {
    method: "POST",
    body: JSON.stringify({ data }),
    headers: { "content-type": "application/json", Authorization: user.token },
  });
  return res.json();
};


CartComponent
"use client";
import { useContext } from "react";
import { CartContext } from "@/context/cartContext";
import { UserContext } from "@/context/userContext";
import { buyOrder } from "@/services/ordersService";

const CartComponent = () => {
  const { cart, cleanCart } = useContext(CartContext);
  const { user } = useContext(UserContext);

  const handleCart = async () => {
    if (user) {
      const res = await buyOrder(cart, user);
      if ((res.status = "approved")) {
        cleanCart();
        alert(res.message);
      } else {
        alert(res.message);
      }
    } else {
      alert("Error!");
    }
  };
  const initialOder = 0;
  const totalOrder = cart.reduce(
    (accumulator, currentValue) => accumulator + currentValue.price,
    initialOder
  );
  return (
    <div className="mx-auto">
      {cart.length === 0 ? (
        <p>Your cart is empty.</p>
      ) : (
        <div className="flex flex-col gap-8 mt-6">
          {cart.map((item, index) => (
            <div
              key={index}
              className="flex justify-between gap-20 items-center p-4 border border-gray-300 rounded-lg bg-gray-50"
            >
              <h3>{item.id}</h3>
              <h3>{item.name}</h3>
              <h3>${item.price}</h3>
            </div>
          ))}
          <div className="flex justify-between gap-20 items-center p-4 border border-gray-300 rounded-lg bg-gray-50">
            <button className="button mt-3 mb-3" onClick={handleCart}>
              Buy Order
            </button>
            <h2>Total: ${totalOrder}</h2>
          </div>
        </div>
      )}
    </div>
  );
};

export default CartComponent;

